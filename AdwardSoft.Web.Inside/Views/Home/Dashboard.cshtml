@inject AdwardSoft.Provider.Common.IUserSession userSession
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Dashboard</h2>
<div class="card">
    <div class="card-header header-elements-inline">
        <h6 class="card-title">Hôm nay</h6>      
    </div>

    <div class="card-body py-0">
        <div class="row">         
            <div class="col-lg">
                <!-- Members online -->
                <div class="card bg-orange-400">
                    <div class="card-body">
                        <div class="d-flex">
                            <h3 class="font-weight-semibold mb-0">Tỉnh thành : <span id="totalLocation">0</span></h3>
                            <div class="list-icons ml-auto">
                                <a class="list-icons-item" data-action="reload"></a>
                            </div>
                        </div>
                        <div>
                            Tỉnh thành mới
                            <div class="font-size-sm opacity-75"><span id="dayLocation">0</span></div>
                        </div>
                    </div>
                    <div id="location-today"></div>
                </div>
                <!-- /members online -->
            </div>
            <div class="col-lg">

                <!-- Members online -->
                <div class="card bg-success-400">
                    <div class="card-body">
                        <div class="d-flex">
                            <h3 class="font-weight-semibold mb-0">Địa điểm : <span id="totalPlace">0</span></h3>
                            <div class="list-icons ml-auto">
                                <a class="list-icons-item" data-action="reload"></a>
                            </div>
                        </div>

                        <div>
                            Địa điểm mới
                            <div class="font-size-sm opacity-75"><span id="dayPlace">0</span></div>
                        </div>
                    </div>
                    <div id="place-today"></div>
                </div>
                <!-- /members online -->

            </div>
            <div class="col-lg">

                <!-- Members online -->
                <div class="card bg-teal-400">
                    <div class="card-body">
                        <div class="d-flex">
                            <h3 class="font-weight-semibold mb-0">Món ăn : <span id="totalFood">0</span></h3>
                            <div class="list-icons ml-auto">
                                <a class="list-icons-item" data-action="reload"></a>
                            </div>
                        </div>

                        <div>
                            Món ăn mới
                            <div class="font-size-sm opacity-75"><span id="dayFood">0</span></div>
                        </div>
                    </div>
                    <div id="food-today"></div>
                </div>
                <!-- /members online -->

            </div>
            <div class="col-lg">
                <!-- Current server load -->
                <div class="card bg-pink-400">
                    <div class="card-body">
                        <div class="d-flex">
                            <h3 class="font-weight-semibold mb-0">Đặc sản : <span id="totalSpec">0</span></h3>
                            <div class="list-icons ml-auto">
                                <a class="list-icons-item" data-action="reload"></a>
                            </div>
                        </div>

                        <div>
                            Đặc sản mới
                            <div class="font-size-sm opacity-75"><span id="daySpec">0</span></div>
                        </div>
                    </div>
                    <div id="spec-today"></div>
                </div>
                <!-- /current server load -->

            </div>
            <div class="col-lg">

                <!-- Today's revenue -->
                <div class="card bg-blue-400">
                    <div class="card-body">
                        <div class="d-flex">
                            <h3 class="font-weight-semibold mb-0">Lễ hội : <span id="totalFes">0</span></h3>
                            <div class="list-icons ml-auto">
                                <a class="list-icons-item" data-action="reload"></a>
                            </div>
                        </div>

                        <div>
                            Lễ hội mới
                            <div class="font-size-sm opacity-75"><span id="dayFes">0</span></div>
                        </div>
                    </div>

                    <div id="fes-today"></div>
                </div>
                <!-- /today's revenue -->

            </div>        
        </div>
    </div>
</div>

@section Scripts{
    <script>
        



        $(document).ready(function () {          
            loadToday();
           
            
            
        });


        function formatDate(d) {
            var myDate = new Date(d);
            var hrs = ((myDate.getHours() > 12) ? myDate.getHours() - 12 : myDate.getHours());
            var amPM = ((myDate.getHours() >= 12) ? "PM" : "AM");

            if (hrs == 0) hrs = 12;

            var formattedDate = (myDate.getMonth() + 1) + "/" + myDate.getDate() + "/" + (myDate.getFullYear()%2000);

            return formattedDate;
        }

        function loadToday() {
                $.ajax({
                    url: "@Url.Action("ReadDashbroad", "Home")",
                    method: "GET",                   
                    success: function (data) {
                        $("#totalLocation").html(data.totalLocation);
                        $("#totalPlace").html(data.totalPlace);
                        $("#totalFood").html(data.totalFood);
                        $("#totalSpec").html(data.totalSpec);
                        $("#totalFes").html(data.totalFes);
                        
                        for (i = 0; i < 7; i++) {
                            data.location[i].date = formatDate(data.location[i].date);
                            data.place[i].date = formatDate(data.place[i].date);
                            data.food[i].date = formatDate(data.food[i].date);
                            data.spec[i].date = formatDate(data.spec[i].date);
                            data.fes[i].date = formatDate(data.fes[i].date);
                            if (i == 6) {
                                $("#dayLocation").html(data.location[i].record);
                                $("#dayPlace").html(data.place[i].record);
                                $("#dayFood").html(data.food[i].record);
                                $("#daySpec").html(data.spec[i].record);
                                $("#dayFes").html(data.fes[i].record);
                            }
                        }
                        
                        _DailyLineChart('#location-today', 50, 'Tỉnh / Thành phố', data.location);
                        _DailyLineChart('#place-today', 50, 'Địa điểm', data.place);
                        _DailyLineChart('#food-today', 50, 'Món ăn', data.food);
                        _DailyLineChart('#spec-today', 50, 'Đặc sản', data.spec);
                        _DailyLineChart('#fes-today', 50, 'Lễ hội', data.fes);
                    }
                });
        }


      

        function _DailyLineChart(element, height, name, dataWeek) {
            if (typeof d3 == 'undefined') {
                console.warn('Warning - d3.min.js is not loaded.');
                return;
            }

            // Initialize chart only if element exsists in the DOM
            if ($(element).length > 0) {


                // Basic setup
                // ------------------------------

                // Add data set
                var dataset = dataWeek;

                // Main variables
                var d3Container = d3.select(element),
                    margin = { top: 0, right: 0, bottom: 0, left: 0 },
                    width = d3Container.node().getBoundingClientRect().width - margin.left - margin.right,
                    height = height - margin.top - margin.bottom,
                    padding = 20;

                // Format date
                var parseDate = d3.time.format('%m/%d/%y').parse,
                    formatDate = d3.time.format('%a, %B %e');



                // Add tooltip
                // ------------------------------

                var tooltip = d3.tip()
                    .attr('class', 'd3-tip')
                    .html(function (d) {
                        return '<ul class="list-unstyled mb-1">' +
                            '<li>' + '<div class="font-size-base my-1"><i class="icon-check2 mr-2"></i>' + formatDate(d.date) + '</div>' + '</li>' +
                            '<li>' + name + ': &nbsp;' + '<span class="font-weight-semibold float-right">' + d.record + '</span>' + '</li>'
                            '</ul>';
                    });



                // Create chart
                // ------------------------------

                // Add svg element
                var container = d3Container.append('svg');

                // Add SVG group
                var svg = container
                    .attr('width', width + margin.left + margin.right)
                    .attr('height', height + margin.top + margin.bottom)
                    .append('g')
                    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')
                    .call(tooltip);



                // Load data
                // ------------------------------

                dataset.forEach(function (d) {
                    d.date = parseDate(d.date.toString('yyyy-MM-dd'));
                    d.record = +d.record;
                });



                // Construct scales
                // ------------------------------

                // Horizontal
                var x = d3.time.scale()
                    .range([padding, width - padding]);

                // Vertical
                var y = d3.scale.linear()
                    .range([height, 5]);



                // Set input domains
                // ------------------------------

                // Horizontal
                x.domain(d3.extent(dataset, function (d) {
                    return d.date;
                }));

                // Vertical
                y.domain([0, d3.max(dataset, function (d) {
                    return Math.max(d.record);
                })]);



                // Construct chart layout
                // ------------------------------

                // Line
                var line = d3.svg.line()
                    .x(function (d) {
                        return x(d.date);
                    })
                    .y(function (d) {
                        return y(d.record)
                    });



                //
                // Append chart elements
                //

                // Add mask for animation
                // ------------------------------

                // Add clip path
                var clip = svg.append('defs')
                    .append('clipPath')
                    .attr('id', 'clip-line-small');

                // Add clip shape
                var clipRect = clip.append('rect')
                    .attr('class', 'clip')
                    .attr('width', 0)
                    .attr('height', height);

                // Animate mask
                clipRect
                    .transition()
                    .duration(1000)
                    .ease('linear')
                    .attr('width', width);



                // Line
                // ------------------------------

                // Path
                var path = svg.append('path')
                    .attr({
                        'd': line(dataset),
                        'clip-path': 'url(#clip-line-small)',
                        'class': 'd3-line d3-line-medium'
                    })
                    .style('stroke', '#fff');

                // Animate path
                svg.select('.line-tickets')
                    .transition()
                    .duration(1000)
                    .ease('linear');



                // Add vertical guide lines
                // ------------------------------

                // Bind data
                var guide = svg.append('g')
                    .selectAll('.d3-line-guides-group')
                    .data(dataset);

                // Append lines
                guide
                    .enter()
                    .append('line')
                    .attr('class', 'd3-line-guides')
                    .attr('x1', function (d, i) {
                        return x(d.date);
                    })
                    .attr('y1', function (d, i) {
                        return height;
                    })
                    .attr('x2', function (d, i) {
                        return x(d.date);
                    })
                    .attr('y2', function (d, i) {
                        return height;
                    })
                    .style('stroke', 'rgba(255,255,255,0.3)')
                    .style('stroke-dasharray', '4,2')
                    .style('shape-rendering', 'crispEdges');

                // Animate guide lines
                guide
                    .transition()
                    .duration(1000)
                    .delay(function (d, i) { return i * 150; })
                    .attr('y2', function (d, i) {
                        return y(d.record);
                    });



                // Alpha app points
                // ------------------------------

                // Add points
                var points = svg.insert('g')
                    .selectAll('.d3-line-circle')
                    .data(dataset)
                    .enter()
                    .append('circle')
                    .attr('class', 'd3-line-circle d3-line-circle-medium')
                    .attr('cx', line.x())
                    .attr('cy', line.y())
                    .attr('r', 3)
                    .style('stroke', '#fff')
                    .style('fill', '#29B6F6');



                // Animate points on page load
                points
                    .style('opacity', 0)
                    .transition()
                    .duration(250)
                    .ease('linear')
                    .delay(1000)
                    .style('opacity', 1);


                // Add user interaction
                points
                    .on('mouseover', function (d) {
                        tooltip.offset([-10, 0]).show(d);

                        // Animate circle radius
                        d3.select(this).transition().duration(250).attr('r', 4);
                    })

                    // Hide tooltip
                    .on('mouseout', function (d) {
                        tooltip.hide(d);

                        // Animate circle radius
                        d3.select(this).transition().duration(250).attr('r', 3);
                    });

                // Change tooltip direction of first point
                d3.select(points[0][0])
                    .on('mouseover', function (d) {
                        tooltip.offset([0, 10]).direction('e').show(d);

                        // Animate circle radius
                        d3.select(this).transition().duration(250).attr('r', 4);
                    })
                    .on('mouseout', function (d) {
                        tooltip.direction('n').hide(d);

                        // Animate circle radius
                        d3.select(this).transition().duration(250).attr('r', 3);
                    });

                // Change tooltip direction of last point
                d3.select(points[0][points.size() - 1])
                    .on('mouseover', function (d) {
                        tooltip.offset([0, -10]).direction('w').show(d);

                        // Animate circle radius
                        d3.select(this).transition().duration(250).attr('r', 4);
                    })
                    .on('mouseout', function (d) {
                        tooltip.direction('n').hide(d);

                        // Animate circle radius
                        d3.select(this).transition().duration(250).attr('r', 3);
                    })



                // Resize chart
                // ------------------------------

                // Call function on window resize
                $(window).on('resize', revenueResize);

                // Call function on sidebar width change
                $(document).on('click', '.sidebar-control', revenueResize);

             
                function revenueResize() {

                    // Layout variables
                    width = d3Container.node().getBoundingClientRect().width - margin.left - margin.right;


                    // Layout
                    // -------------------------

                    // Main svg width
                    container.attr('width', width + margin.left + margin.right);

                    // Width of appended group
                    svg.attr('width', width + margin.left + margin.right);

                    // Horizontal range
                    x.range([padding, width - padding]);


                    // Chart elements
                    // -------------------------

                    // Mask
                    clipRect.attr('width', width);

                    // Line path
                    svg.selectAll('.d3-line').attr('d', line(dataset));

                    // Circles
                    svg.selectAll('.d3-line-circle').attr('cx', line.x());

                    // Guide lines
                    svg.selectAll('.d3-line-guides')
                        .attr('x1', function (d, i) {
                            return x(d.date);
                        })
                        .attr('x2', function (d, i) {
                            return x(d.date);
                        });
                }
            }
        };
    </script>
}

